---
name: Push/PR pipeline

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - README.md
      - 'docs/**'
      - 'examples/**'

env:
  REPO_FULL_NAME: ${{ github.event.repository.full_name }}
  ORIGINAL_REPO_NAME: "newrelic/nri-flex"
  GO_VERSION: '1.15'

jobs:

  test-nix:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    name: Run unit tests in ${{matrix.os}}
    runs-on: ${{matrix.os}}
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Run unit tests
        run:  make ci/test
      - name: Convert coverage.out to lcov.info
        run: make ci/convert-coverage
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: lcov.info
          flag-name: run-linux
          parallel: true

  test-integration-nix:
    name: Run integration tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Run integration tests
        run: make test-integration

  snyk:
    name: Run security checks via snyk
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Scan code for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.COREINT_SNYK_TOKEN }}
        run: make ci/snyk-test

  test-windows:
    strategy:
      matrix:
        go: [ '1.16' ]
        os: [ windows-2019 ]
    name: Run unit and integration tests in ${{matrix.os}} with go ${{matrix.go}}
    runs-on: ${{matrix.os}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: install go
        uses: actions/setup-go@v2
        with:
          go-version: ${{matrix.go}}
      - name: run unit tests
        # we don't have 'make' on windows.
        run: |
          go test ./...
      - name: run integration tests
        # we don't have 'make' on windows.
        run: |
          go test --tags=integration ./...

  test-build:
    name: Test binary compilation for all platforms:arch
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.OHAI_DOCKER_HUB_ID }}
          password: ${{ secrets.OHAI_DOCKER_HUB_PASSWORD }}
      - name: Build all platforms:arch
        run: make ci/pre-release

  finish:
    name: Finish
    needs: [ test-nix, test-windows ]
    runs-on: ubuntu-20.04
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
